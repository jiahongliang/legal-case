{"version":3,"file":"static/js/739.61bb9a8c.chunk.js","mappings":"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","sources":["api/axios/index.js","api/user.js","pages/Login.jsx","util/Constants.js"],"sourcesContent":["import axios from \"axios\";\nimport {message} from 'antd';\nimport {createBrowserHistory} from 'history';\nimport {LOGIN_USER_TOKEN} from '../../util/Constants'\n\naxios.defaults.timeout = 60000;\naxios.defaults.baseURL = '/legal-case';\n\nexport let serviceJson = axios.create({});\n\nexport let service = axios.create({\n    contentType: 'application/x-www-form-urlencoded;charset=UTF-8',\n    transformRequest: [\n        function(data) {\n            let ret = '';\n            for (let it in data) {\n                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n            }\n            ret = ret.substring(0, ret.lastIndexOf('&'));\n            return ret;\n        }\n    ],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n    }\n});\n\nexport let serviceUpload = axios.create({\n    headers: {\n        'content-type': 'multipart/form-data'\n    },\n});\n\nfunction interceptors(service) {\n    const browserHistory = createBrowserHistory();\n    service.interceptors.request.use(\n        (config) => {\n            config.headers.token = 'token';\n            return config;\n        },\n        (error) => {\n            Promise.reject(error);\n        }\n    );\n\n    service.interceptors.response.use(\n        (response) => {\n            const dataAxios = response;\n            const {code} = dataAxios.data;\n\n            if(!code) {\n                return dataAxios;\n            }\n\n            switch (code) {\n                case 10000:\n                    return dataAxios.data;\n                default:\n                    errorCreate(`${dataAxios.data.msg}`)\n            }\n        },\n        (error) => {\n            let showLogin = false;\n            if (error && error.response) {\n                switch (error.response.status) {\n                    case 400:\n                        error.message = '请求错误'\n                        break\n                    case 401:\n                        error.message = '未登录或登录超时，请重新登录'\n                        showLogin = true;\n                        break\n                    case 403:\n                        error.message = '拒绝访问'\n                        break\n                    case 404:\n                        error.message = `请求地址出错: ${error.response.config.url}`\n                        break\n                    case 408:\n                        error.message = '请求超时'\n                        break\n                    case 500:\n                        error.message = '服务器内部错误'\n                        break\n                    case 501:\n                        error.message = '服务未实现'\n                        break\n                    case 502:\n                        error.message = '网关错误'\n                        break\n                    case 503:\n                        error.message = '服务不可用'\n                        break\n                    case 504:\n                        error.message = '网关超时'\n                        break\n                    case 505:\n                        error.message = 'HTTP版本不受支持'\n                        break\n                    default:\n                        break\n                }\n            }\n            errorLog(error);\n            if(showLogin) {\n                setTimeout(() => {\n                    sessionStorage.removeItem(LOGIN_USER_TOKEN);\n                    browserHistory.push('/');\n                    browserHistory.go();\n                },1000)\n            }\n            return Promise.reject(error);\n        }\n    );\n}\n\nfunction errorCreate(msg) {\n    const err = new Error(msg);\n    errorLog(err);\n}\n\nfunction errorLog(err) {\n    message.error(err.message);\n}\n\ninterceptors(service);\ninterceptors(serviceJson);\ninterceptors(serviceUpload);","import { service, serviceJson } from \"./axios\";\n\nexport const login = (loginToken) => {\n    const data = { loginToken };\n    return service({\n        url: '/login',\n        data,\n        method: 'post',\n    });\n}\n\nexport const fetchValidateCodeImage = () => {\n    return service({\n        url: '/verify_code/generate',\n        method: 'get',\n        responseType: \"blob\"\n    })\n}\n\nexport const logout = () => {\n    return service({\n        url: '/logout',\n        method: 'get'\n    })\n}\n\nexport const updatePassword = (params) => {\n    const data = {params};\n    return service({\n        url: '/user/update-password',\n        data,\n        method: 'post',\n    });\n}\n\nexport const userList = (data) => {\n    return serviceJson({\n        url: '/user/list',\n        data,\n        method: 'post',\n    });\n}\n\nexport const userAction = (data) => {\n    return serviceJson({\n        url: '/user/action',\n        data,\n        method: 'post',\n    });\n}\n\nexport const saveUser = (data) => {\n    return serviceJson({\n        url: '/user/update',\n        data,\n        method: 'post',\n    }); \n}\n\nexport const roleList = () => {\n    return serviceJson({\n        url: '/role/list',\n        method: 'get',\n    });\n}\n\nexport const registerUser = (data) => {\n    return serviceJson({\n        url: '/user/register',\n        data,\n        method: 'post',\n    });\n}\n\nexport const resetPassword = (data) => {\n    return serviceJson({\n        url: '/user/reset-password',\n        data,\n        method: 'post',\n    });\n}","import React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router';\nimport { useState } from \"react\";\nimport { Card, Form, Input, Button, Image } from \"antd\";\nimport { LockOutlined, UserOutlined, HolderOutlined } from '@ant-design/icons';\nimport { login } from \"../api/user\";\nimport {LOGIN_USER_TOKEN} from '../util/Constants'\nimport Base64 from 'base-64';\nimport './Login.css';\n\nconst Login = () => {\n    let navigate = useNavigate();\n    const [form] = Form.useForm();\n    \n    let validateCodeImageUrl = '/legal-case/verify_code/generate?' + (new Date()).getTime();\n    let loginActionError = '';\n    const [imgUrl, setImgUrl] = useState(validateCodeImageUrl);\n    const [loginError, setLoginError] = useState(loginActionError);\n\n    useEffect(() => {\n        let loginTokenString = sessionStorage.getItem(LOGIN_USER_TOKEN);\n        if (loginTokenString && loginTokenString.length > 0) {\n            navigate('/console');\n        } \n    },[navigate]);\n\n    const reloadValidateCode = () => {\n        setImgUrl('/legal-case/verify_code/generate?' + (new Date()).getTime());\n    }\n\n    const handleLogin = () => {\n        form.validateFields().then(data => {\n            let loginToken = Base64.encode(JSON.stringify(data));\n            login(loginToken).then((res) => {\n                if (res.subCode === 0) {\n                    let userDetails = res.rows[0];\n                    sessionStorage.setItem(LOGIN_USER_TOKEN, JSON.stringify(userDetails));\n                    navigate('/console');\n                    return;\n                } else {\n                    setLoginError(res.subMsg);\n                    reloadValidateCode();\n                }\n            }, (error) => {\n                setLoginError(error.message);\n                reloadValidateCode();\n            });\n        });\n    }\n\n    return (\n        <div className=\"login-container\">\n            <div className=\"login-box\">\n                <Card size=\"small\"\n                    bordered={true}\n                    hoverable\n                    title=\"欢迎登录\"\n                    headStyle={{ 'fontWeight': '600' }}>\n                    <Form form={form} className=\"login-form\">\n                        <Form.Item name=\"userName\" rules={[{ required: true, message: '请输入用户名' }]}>\n                            <Input addonBefore={<UserOutlined />} maxLength={20} placeholder=\"请输入用户名\" />\n                        </Form.Item>\n                        <Form.Item name=\"password\" rules={[{ required: true, message: '请输入密码' }]}>\n                            <Input.Password addonBefore={<LockOutlined />} maxLength={20} placeholder=\"请输入密码\" />\n                        </Form.Item>\n                        <Form.Item name=\"verifyCode\" rules={[{ required: true, message: '请输入验证码' }]}>\n                            <Input addonBefore={<HolderOutlined />} maxLength={4}\n                                addonAfter={<Image width={80} src={imgUrl} onClick={reloadValidateCode} onError={reloadValidateCode} preview={false} />}\n                                placeholder=\"请输入验证码\" />\n                        </Form.Item>\n                        <Button type=\"primary\" block onClick={handleLogin}> 登录 </Button>\n                        <div className=\"ant-form-item-explain-error\">{loginError}</div>\n                    </Form>\n                </Card>\n            </div>\n        </div>\n    );\n}\nexport default Login;\n","export const LOGIN_USER_TOKEN = 'loginUserToken';\nexport const CONSOLE_NAVIGATE_TABS = 'consoleNavigateTabs';"],"names":["axios","serviceJson","service","contentType","transformRequest","data","ret","it","encodeURIComponent","substring","lastIndexOf","headers","serviceUpload","interceptors","browserHistory","createBrowserHistory","request","use","config","token","error","Promise","reject","response","msg","dataAxios","code","errorLog","Error","showLogin","status","message","url","setTimeout","sessionStorage","removeItem","LOGIN_USER_TOKEN","push","go","err","login","loginToken","method","logout","updatePassword","params","userList","userAction","saveUser","roleList","registerUser","resetPassword","navigate","useNavigate","Form","form","validateCodeImageUrl","Date","getTime","useState","imgUrl","setImgUrl","loginError","setLoginError","useEffect","loginTokenString","getItem","length","reloadValidateCode","className","size","bordered","hoverable","title","headStyle","name","rules","required","addonBefore","UserOutlined","maxLength","placeholder","LockOutlined","HolderOutlined","addonAfter","width","src","onClick","onError","preview","type","block","validateFields","then","Base64","JSON","stringify","res","subCode","userDetails","rows","setItem","subMsg","CONSOLE_NAVIGATE_TABS"],"sourceRoot":""}