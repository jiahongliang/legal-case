{"version":3,"file":"static/js/921.32b300df.chunk.js","mappings":"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","sources":["api/axios/index.js","api/biz.js","api/user.js","pages/console/biz-info/CaseExecution/components/HandleExecution/index.jsx","pages/console/biz-info/CaseExecution/index.jsx","util/Constants.js"],"sourcesContent":["import axios from \"axios\";\nimport {message} from 'antd';\nimport {createBrowserHistory} from 'history';\nimport {LOGIN_USER_TOKEN} from '../../util/Constants'\n\naxios.defaults.timeout = 60000;\naxios.defaults.baseURL = '/legal-case';\n\nexport let serviceJson = axios.create({});\n\nexport let service = axios.create({\n    contentType: 'application/x-www-form-urlencoded;charset=UTF-8',\n    transformRequest: [\n        function(data) {\n            let ret = '';\n            for (let it in data) {\n                ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n            }\n            ret = ret.substring(0, ret.lastIndexOf('&'));\n            return ret;\n        }\n    ],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n    }\n});\n\nexport let serviceUpload = axios.create({\n    headers: {\n        'content-type': 'multipart/form-data'\n    },\n});\n\nfunction interceptors(service) {\n    const browserHistory = createBrowserHistory();\n    service.interceptors.request.use(\n        (config) => {\n            config.headers.token = 'token';\n            return config;\n        },\n        (error) => {\n            Promise.reject(error);\n        }\n    );\n\n    service.interceptors.response.use(\n        (response) => {\n            const dataAxios = response;\n            const {code} = dataAxios.data;\n\n            if(!code) {\n                return dataAxios;\n            }\n\n            switch (code) {\n                case 10000:\n                    return dataAxios.data;\n                default:\n                    errorCreate(`${dataAxios.data.msg}`)\n            }\n        },\n        (error) => {\n            let showLogin = false;\n            if (error && error.response) {\n                switch (error.response.status) {\n                    case 400:\n                        error.message = '请求错误'\n                        break\n                    case 401:\n                        error.message = '未登录或登录超时，请重新登录'\n                        showLogin = true;\n                        break\n                    case 403:\n                        error.message = '拒绝访问'\n                        break\n                    case 404:\n                        error.message = `请求地址出错: ${error.response.config.url}`\n                        break\n                    case 408:\n                        error.message = '请求超时'\n                        break\n                    case 500:\n                        error.message = '服务器内部错误'\n                        break\n                    case 501:\n                        error.message = '服务未实现'\n                        break\n                    case 502:\n                        error.message = '网关错误'\n                        break\n                    case 503:\n                        error.message = '服务不可用'\n                        break\n                    case 504:\n                        error.message = '网关超时'\n                        break\n                    case 505:\n                        error.message = 'HTTP版本不受支持'\n                        break\n                    default:\n                        break\n                }\n            }\n            errorLog(error);\n            if(showLogin) {\n                setTimeout(() => {\n                    sessionStorage.removeItem(LOGIN_USER_TOKEN);\n                    browserHistory.push('/');\n                    browserHistory.go();\n                },1000)\n            }\n            return Promise.reject(error);\n        }\n    );\n}\n\nfunction errorCreate(msg) {\n    const err = new Error(msg);\n    errorLog(err);\n}\n\nfunction errorLog(err) {\n    message.error(err.message);\n}\n\ninterceptors(service);\ninterceptors(serviceJson);\ninterceptors(serviceUpload);","import { service, serviceJson } from \"./axios\";\n\nexport const caseTypeList = (data) => {\n    return serviceJson({\n        url: '/case-type/list',\n        data,\n        method: 'post',\n    });\n}\n\nexport const saveCaseType = (data) => {\n    return serviceJson({\n        url: '/case-type/save',\n        data,\n        method: 'post',\n    });\n}\n\nexport const removeCaseType = (data) => {\n    return serviceJson({\n        url: '/case-type/remove',\n        data,\n        method: 'post',\n    });\n}\n\nexport const caseTypeDefinitionList = (data) => {\n    return serviceJson({\n        url: '/case-type-definition/list',\n        data,\n        method: 'post',\n    }); \n}\n\nexport const createCaseExecution = (data) => {\n    return serviceJson({\n        url: '/case-execution/create',\n        data,\n        method: 'post',\n    });\n}\n\nexport const caseExecutionList = (data) => {\n    return serviceJson({\n        url: '/case-execution/list',\n        data,\n        method: 'post',\n    });\n}\n\nexport const completeCaseExecution = (data) => {\n    return serviceJson({\n        url: '/case-execution/complete',\n        data,\n        method: 'post',\n    });\n}\n\nexport const handleCaseExecution = (data) => {\n    return serviceJson({\n        url: '/case-execution/handle',\n        data,\n        method: 'post',\n    });\n}","import { service, serviceJson } from \"./axios\";\n\nexport const login = (loginToken) => {\n    const data = { loginToken };\n    return service({\n        url: '/login',\n        data,\n        method: 'post',\n    });\n}\n\nexport const fetchValidateCodeImage = () => {\n    return service({\n        url: '/verify_code/generate',\n        method: 'get',\n        responseType: \"blob\"\n    })\n}\n\nexport const logout = () => {\n    return service({\n        url: '/logout',\n        method: 'get'\n    })\n}\n\nexport const updatePassword = (params) => {\n    const data = {params};\n    return service({\n        url: '/user/update-password',\n        data,\n        method: 'post',\n    });\n}\n\nexport const userList = (data) => {\n    return serviceJson({\n        url: '/user/list',\n        data,\n        method: 'post',\n    });\n}\n\nexport const userAction = (data) => {\n    return serviceJson({\n        url: '/user/action',\n        data,\n        method: 'post',\n    });\n}\n\nexport const saveUser = (data) => {\n    return serviceJson({\n        url: '/user/update',\n        data,\n        method: 'post',\n    }); \n}\n\nexport const roleList = () => {\n    return serviceJson({\n        url: '/role/list',\n        method: 'get',\n    });\n}\n\nexport const registerUser = (data) => {\n    return serviceJson({\n        url: '/user/register',\n        data,\n        method: 'post',\n    });\n}\n\nexport const resetPassword = (data) => {\n    return serviceJson({\n        url: '/user/reset-password',\n        data,\n        method: 'post',\n    });\n}","import { useEffect, useState } from 'react';\nimport newCaseIcon from '../../../../../../assets/images/new-case.jpg';\nimport { PageHeader, Row, Col, Tag, Collapse, Tabs, Form, Tooltip } from \"antd\";\nimport { UserOutlined } from '@ant-design/icons';\nimport './index.css'\n\nconst { TabPane } = Tabs;\nconst { Panel } = Collapse;\n\nconst HandleExecution = (props) => {\n    const [data, setData] = useState({});\n    const [caseTypeData, setCaseTypeData] = useState([]);\n    const [stepActiveKey, setStepActiveKey] = useState([]);\n    const [userData, setUserData] = useState([]);\n\n    useEffect(() => {\n        console.log(props)\n        setData(props.data);\n        setCaseTypeData(props.caseTypeData);\n        setStepActiveKey(props.data.steps ? props.data.steps.map(step => step.id) : []);\n        setUserData(props.userData);\n    }, []);\n\n    const handleCollapseChange = (keys) => {\n        setStepActiveKey(keys);\n    }\n\n    return (\n        <>\n            <PageHeader\n                title=\"案件详情\"\n                className=\"site-page-header\"\n                subTitle=\"查看案件详情\"\n                avatar={{ src: newCaseIcon }}\n                onBack={() => props.onExit()}\n            >\n            <Form layout=\"vertical\">\n                <Row gutter={16} className=\"case-form-row\" justify=\"space-between\">\n                        <Col span={9} className=\"case-form-area\">\n                            <Form.Item label=\"类型\">\n                                {caseTypeData && caseTypeData.length > 0 ? caseTypeData.find(ctd => ctd.id === data.typeId).name : \"\"}\n                            </Form.Item>\n\n                            <Form.Item label=\"名称\">\n                                {data.name}\n                            </Form.Item>\n\n                            <Form.Item label=\"负责人\">\n                                {\n                                    userData.length > 0 ? userData.find(user => user.id === data.createdBy).name : ''\n                                }\n                            </Form.Item>\n                            \n                            <Form.Item label=\"创建时间\">\n                                {data.createdTime}\n                            </Form.Item>\n\n                            <Form.Item label=\"最后修改时间\">\n                                {data.lastmodifiedTime}\n                            </Form.Item>\n                        </Col>\n                        <Col span={15} className=\"case-form-area\">\n                            <span style={{fontWeight: 600}}>步骤及事项</span>\n                            <Collapse\n                                activeKey={stepActiveKey}\n                                onChange={handleCollapseChange}\n                                className=\"case-form-step-data\"\n                                style={{marginTop: '10px'}}\n                                expandIconPosition=\"left\"\n                            >\n                                {\n                                    data.steps ? data.steps.map(step => (\n                                        <Panel header={step.name} key={step.id} collapsible=\"header\" extra={\n                                        <span>{step.suspect}</span>\n                                        }>\n                                            {\n                                                (step.caseTypeStepItems && step.caseTypeStepItems.length > 0) ? \n                                                    step.caseTypeStepItems.map(item => item.status === 1 ? (\n                                                        <Tooltip key={item.name}  placement=\"topLeft\" title={item.lawTitle} color=\"gold\" arrowPointAtCenter>\n                                                            <Tag\n                                                                className=\"edit-tag\"\n                                                                key={item.id}\n                                                                closable={false}\n                                                            >\n                                                                {item.name}\n                                                            </Tag>\n                                                        </Tooltip>\n                                                    ) : '')\n                                                    : ''\n                                            }\n                                        </Panel>\n                                    )) : []\n                                }\n                            </Collapse>\n                        </Col>\n                </Row>\n                    </Form>\n            </PageHeader>\n        </>\n    )\n}\n\nexport default HandleExecution;","import { useEffect, useState } from \"react\";\nimport { Form, Input, Checkbox, Button, Select, Space,  Table } from 'antd'\nimport HandleExecution from \"./components/HandleExecution\";\nimport { caseTypeList, caseExecutionList, completeCaseExecution} from \"../../../../api/biz\"\nimport {userList} from \"../../../../api/user\"\nimport './index.css'\n\nconst { Option } = Select;\n\nconst statusOptions = [\n    {\n        label: '进行中',\n        value: '1',\n    },\n    {\n        label: '已完成',\n        value: '2',\n    }\n];\n\nconst BizHandle = () => {\n    const [searchForm] = Form.useForm();\n    const [dataLoading, setDataLoading] = useState(false);\n    const [data, setData] = useState([]);\n    const [total, setTotal] = useState(null);\n    const [page, setPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [caseTypeData, setCaseTypeData] = useState([]);\n\n    const [detailData, setDetailData] = useState(null);\n    const [userData, setUserData] = useState([]);\n\n    useEffect(() => {\n        loadCaseTypeData();\n        loadData();\n        loadUserData();\n    }, []);\n\n    const loadCaseTypeData = () => {\n        let params = {\n            entity:{},\n            pageNum: 0,\n            pageSize: 1000,\n            orderBy: \"id asc\"\n        }\n        caseTypeList(params).then(res => {\n            setCaseTypeData(res.rows);\n        });\n    }\n\n    const loadUserData = () => {\n        let param = {\n            entity: {},\n            where: [{\n                field: \"status\",\n                opt: \"in\",\n                value: \"1,2\"\n            }],\n            pageNum: 0,\n            pageSize: 1000,\n            orderBy: \"id asc\"\n\n        };\n        userList(param).then(res => {\n            setUserData(res.rows);\n        });\n    }\n\n    const handleFinishSearchForm = (searchData) => {\n        loadData();\n    }\n\n    const handleCaseExecution = (record) => {\n        setDetailData(record);\n    }\n\n    const exitHandleCaseExecution = () => {\n        setDetailData(null);\n    }\n\n    const handleSaveSuccess = () => {\n        exitHandleCaseExecution();\n        loadData();\n    }\n    \n\n    const onTablePageChange = (page, pageSize) => {\n        setPage(page);\n        setPageSize(pageSize);\n        loadData();\n    }\n\n    const loadData = () => {\n        setDataLoading(true);\n        let searchData = searchForm.getFieldsValue();\n        console.log('searchData',searchData);\n        let param = {\n            entity: {\n                typeId: searchData.typeId,\n                name: searchData.name\n            },\n            where: searchData.status && searchData.status.length > 0 ? [\n                {\n                    field: \"status\",\n                    opt: \"in\",\n                    value: searchData.status.join()\n                }\n            ] : [{\n                field: \"status\",\n                opt: \"in\",\n                value: \"1,2\"\n            }],\n            pageNum: page - 1,\n            pageSize,\n            orderBy: \"createdTime desc\"\n        };\n\n        if(searchData.creator && searchData.creator.trim().length > 0) {\n            console.log('creator is inputed')\n            let createdBys = userData.filter(user => user.name.indexOf(searchData.creator) > -1).map(user => user.id + '').join();\n            if(createdBys.trim().length === 0) {\n                createdBys = '0';\n            }\n            param.where.push({\n                field: \"createdBy\",\n                opt: \"in\",\n                value: createdBys\n            });\n        }\n\n        caseExecutionList(param).then(res => {\n            console.log(res)\n            setData(res.rows);\n            setTotal(res.total)\n        });\n\n        setDataLoading(false);\n    }\n\n    const onSelectionChange = (selectedRowKeys, selectedRows, info) => {\n        console.log(\"selectedRowKeys\", selectedRowKeys)\n        console.log(\"selectedRows\", selectedRows)\n        console.log(\"info\", info)\n    }\n    \n    const columns = [\n        {\n            title: '名称',\n            dataIndex: 'name',\n            onHeaderCell: function (column) {\n                column.align = \"center\"\n            }\n        },\n        {\n            title: '类型',\n            onHeaderCell: function (column) {\n                column.align = \"center\"\n            },\n            render: (_,record) => {\n                let caseType = caseTypeData.find(ct => ct.id === record.typeId);\n                return caseType ? caseType.name : '.name'\n            },\n            width: 120\n            \n        },\n        {\n            title: '负责人',\n            dataIndex: 'createdBy',\n            onHeaderCell: function (column) {\n                column.align = \"center\"\n            },\n            render: (_,record) => userData.length > 0 ? userData.find(user => user.id === record.createdBy).name : '',\n            width: 80\n        },\n        {\n            title: '环节数量',\n            onHeaderCell: function (column) {\n                column.align = \"center\"\n            },\n            render: (_,record) => record.steps.length,\n            width: 80\n        },\n        {\n            title: '剩余事项',\n            onHeaderCell: function (column) {\n                column.align = \"center\"\n            },\n            render: (_,record) => {\n                let restCount = 0;\n                record.steps.forEach(step => {\n                    if(step.caseTypeStepItems) {\n                        restCount += step.caseTypeStepItems.filter(item => item.status === 1).length;\n                    }\n                    \n                });\n                return restCount;\n            },\n            width: 80\n        },\n        {\n            title: '创建时间',\n            dataIndex: 'createdTime',\n            onHeaderCell: function (column) {\n                column.align = \"center\"\n            },\n            width: 180\n        },\n        {\n            title: '状态',\n            dataIndex: 'status',\n            onHeaderCell: function (column) {\n                column.align = \"center\"\n            },\n            render: (_,record) => {\n                if(record.status === 1) {\n                    return (<span style={{color:\"green\"}}>进行中</span>)\n                }\n                if(record.status === 2) {\n                    return (<span style={{color:\"Gray\"}}>已完成</span>)\n                }\n            },\n            width: 60\n        },\n        {\n            title: '操作',\n            key: 'action',\n            render: (_, record) => (\n                <Space size=\"middle\">\n                    <Button size=\"small\" onClick={() => handleCaseExecution(record)}>查看</Button>\n                </Space>\n            ),\n            align: \"center\",\n            width: 100\n        }\n    ];\n\n    return detailData == null ? (\n        <>\n            <Form form={searchForm} initialValues={{\n                status: ['1', '2']\n            }}\n                layout=\"inline\"\n                className=\"search-form\"\n                onFinish={handleFinishSearchForm}\n            >\n                <Form.Item name=\"typeId\" label=\"类型\">\n                    <Select style={{width: \"160px\"}} size=\"small\">\n                        <Option value=\"\">请选择</Option>\n                        {\n                            caseTypeData.map(caseType => (\n                                <Option value={caseType.id} key={caseType.id}>{caseType.name}</Option>\n                            ))\n                        }\n                    </Select>\n                </Form.Item>\n                <Form.Item name=\"name\" label=\"名称\">\n                    <Input maxLength={10} placeholder=\"请输入名称\" size=\"small\" />\n                </Form.Item>\n\n                <Form.Item name=\"creator\" label=\"负责人\">\n                    <Input maxLength={10} placeholder=\"请输入负责人\" size=\"small\" />\n                </Form.Item>\n\n                <Form.Item name=\"status\" label=\"状态\">\n                    <Checkbox.Group options={statusOptions} />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" size=\"small\" htmlType=\"submit\">\n                        查询\n                    </Button>\n                </Form.Item>\n            </Form>\n\n            <Table\n                columns={columns}\n                dataSource={data}\n                loading={dataLoading}\n                pagination={{\n                    position: [\"bottomRight\"],\n                    total: total,\n                    showSizeChanger: true,\n                    showQuickJumper: true,\n                    showTotal: (total) => `共${total}条`,\n                    size: \"small\",\n                    current: page,\n                    pageSize: pageSize,\n                    onChange: onTablePageChange\n                }}\n                scroll={{\n                    scrollToFirstRowOnChange: true,\n                    x: true\n                }}\n                bordered=\"true\"\n                size=\"small\"\n                rowKey=\"id\"\n                rowSelection={{\n                    type: \"checkbox\",\n                    onChange: onSelectionChange\n                }}\n            ></Table>\n        </>\n    ) : (\n        <HandleExecution data={detailData} caseTypeData={caseTypeData} userData={userData} onExit={exitHandleCaseExecution} onSaveSuccess={handleSaveSuccess}></HandleExecution>\n    )\n}\n\nexport default BizHandle;","export const LOGIN_USER_TOKEN = 'loginUserToken';\nexport const CONSOLE_NAVIGATE_TABS = 'consoleNavigateTabs';"],"names":["axios","serviceJson","service","contentType","transformRequest","data","ret","it","encodeURIComponent","substring","lastIndexOf","headers","serviceUpload","interceptors","browserHistory","createBrowserHistory","request","use","config","token","error","Promise","reject","response","msg","dataAxios","code","errorLog","Error","showLogin","status","message","url","setTimeout","sessionStorage","removeItem","LOGIN_USER_TOKEN","push","go","err","caseTypeList","method","saveCaseType","removeCaseType","caseTypeDefinitionList","createCaseExecution","caseExecutionList","completeCaseExecution","handleCaseExecution","login","loginToken","logout","updatePassword","params","userList","userAction","saveUser","roleList","registerUser","resetPassword","Panel","Tabs","Collapse","props","useState","setData","caseTypeData","setCaseTypeData","stepActiveKey","setStepActiveKey","userData","setUserData","useEffect","console","log","steps","map","step","id","title","className","subTitle","avatar","src","newCaseIcon","onBack","onExit","layout","gutter","justify","span","label","length","find","ctd","typeId","name","user","createdBy","createdTime","lastmodifiedTime","style","fontWeight","activeKey","onChange","keys","marginTop","expandIconPosition","header","collapsible","extra","suspect","caseTypeStepItems","item","placement","lawTitle","color","arrowPointAtCenter","closable","Option","Select","statusOptions","value","Form","searchForm","dataLoading","setDataLoading","total","setTotal","page","setPage","pageSize","setPageSize","detailData","setDetailData","loadCaseTypeData","loadData","loadUserData","entity","pageNum","orderBy","then","res","rows","where","field","opt","exitHandleCaseExecution","searchData","getFieldsValue","param","join","creator","trim","createdBys","filter","indexOf","columns","dataIndex","onHeaderCell","column","align","render","_","record","caseType","ct","width","restCount","forEach","key","size","onClick","form","initialValues","onFinish","maxLength","placeholder","options","wrapperCol","offset","type","htmlType","dataSource","loading","pagination","position","showSizeChanger","showQuickJumper","showTotal","current","scroll","scrollToFirstRowOnChange","x","bordered","rowKey","rowSelection","selectedRowKeys","selectedRows","info","onSaveSuccess","CONSOLE_NAVIGATE_TABS"],"sourceRoot":""}